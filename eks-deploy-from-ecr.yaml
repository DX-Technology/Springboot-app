apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-springboot-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: springboot-app
  template:
    metadata:
      labels:
        app: springboot-app
    spec:
      containers:
      - name: my-springboot-app
        image: dxreg.azurecr.io/ayaaaaa3/springboot-app:#{Build.BuildId}#
        imagePullPolicy: Always
        ports:
        - containerPort: 8085
# service type loadbalancer       
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: springboot-app
    k8s-app: springboot-app
  name: springboot-app
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8085
 # type: LoadBalancer
  selector:
    app: springboot-app
    
 #---
 
# apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: springboot-ingress
#  annotations:
#    nginx.ingress.kubernetes.io/ssl-redirect: "false"
#    nginx.ingress.kubernetes.io/use-regex: "true"
#    nginx.ingress.kubernetes.io/rewrite-target: /$2
#spec:
#  ingressClassName: nginx
#  rules:
#  - http:
#      paths:
#      - path: /springboot-app(/|$)(.*)
#        pathType: Prefix
#        backend:
#          service:
#            name: springboot-app
#            port:
#              number: 80
    
#apiVersion: apps/v1
#kind: Deployment
#metadata:
 # name: my-springboot-deployment
#spec:
  #replicas: 4
 # selector:
 #   matchLabels:
 #     app: springboot-app
#  template:
##    metadata:
##    labels:
#        app: springboot-app
#    spec:
 #     containers:
  #    - name: my-springboot-app
   #     image: dxreg.azurecr.io/ayaaaaa3/springboot-app:12
    #    imagePullPolicy: Always
     #   ports:
      #  - containerPort: 8085
# service type loadbalancer       
#---
#apiVersion: v1
#kind: Service
#metadata:
#  labels:
#    app: springboot-app
#    k8s-app: springboot-app
#  name: springboot-app
#spec:
#  ports:
#  - name: http
#    port: 80
#    protocol: TCP
#    targetPort: 8085
#  type: LoadBalancer
#  selector:
#    app: springboot-app#
#new change 1
